name: actions

on: [ push, pull_request ]

jobs:
  lint:
    env:
      CGO_ENABLED: 0
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2

      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.14

      - name: Build
        run: make build-all

      - name: Lint
        uses: golangci/golangci-lint-action@v2
        with:
          version: v1.32
          skip-pkg-cache: true
          skip-build-cache: true

      - name: Refresh GoReport
        run: curl -XPOST --data 'repo=github.com/darthPestilane/easytcp' 'https://goreportcard.com/checks'

  test:
    env:
      CGO_ENABLED: 0
    strategy:
      matrix:
        os: [ ubuntu-latest, macos-latest, windows-latest ]
        go-version: [ 1.14.x, 1.15.x, 1.16.x, 1.17.x ]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2

      - name: Set up Go ${{ matrix.go-version}}
        uses: actions/setup-go@v2
        with:
          go-version: ${{ matrix.go-version}}

      - name: Build
        run: make build-all

      - name: Test
        run: make test-v

      - name: Upload coverage
        uses: codecov/codecov-action@v1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: .testCoverage.txt
